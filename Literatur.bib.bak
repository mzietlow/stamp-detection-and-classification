% Encoding: UTF-8

@Book{Petrlic.2016,
  title     = {Datenschutz - Einführung in technischen Datenschutz, Datenschutzrecht und angewandte Kryptographie},
  publisher = {Springer Vieweg, Wiesbaden},
  year      = {2017},
  author    = {Ronald Petrlic and Christoph Sorge},
  isbn      = {978-3-658-16838-4},
  abstract  = {Dieses Lehrbuch behandelt schwerpunktmäßig technische Maßnahmen, die den Schutz personenbezogener Daten sicherstellen. Dazu werden grundlegende Verfahren der Anonymisierung und der Gewährleistung von Anonymität im Internet (z. B. Tor) vorgestellt. Das Buch gibt einen Überblick über gängige Verfahren des Identitätsmanagements (z. B. OpenID Connect) und die in elektronischen Ausweisdokumenten (z. B. im Personalausweis) verwendeten Sicherheitsmaßnahmen.  Die Datenschutz-Garantien der vermittelten Ansätze werden im Detail behandelt. Im Bereich des World Wide Web erfährt der Leser, wo die Probleme aus Sicht des Datenschutzes liegen und wie diese Lücken geschlossen werden können. Anonyme Bezahlverfahren und eine Untersuchung von Bitcoin runden den technischen Teil des Buches ab. 
Der Leser lernt Ansätze aus der Praxis kennen, um so je nach Anforderungen in der Systementwicklung das passende Verfahren auswählen zu können. 

Daneben werden die Grundlagen des Datenschutzrechts behandelt, weil das Recht auch Anforderungen an technische Lösungen stellt. Betrachtet werden das informationelle Selbstbestimmungsrecht, die Grundzüge des Bundesdatenschutzgesetzes sowie die Datenschutzbestimmungen des Telemediengesetzes. Beispielhaft werden datenschutzrechtliche Fälle bearbeitet.},
  doi       = {10.1007/978-3-658-16839-1},
  keywords  = {Technischer Datenschutz, Privacy by Design, Datenschutzrecht, Kryptographie, TKG, OpenID Connect, Anonymität im Internet, Bitcoin, Telemediengesetz, Identitätsmanagement, Privacy-Enhancing Technologies, Datenschutzbestimmung, Verschlüsselung, Kryptografie, Kryptologie},
}

@Book{Rohr.2018,
  title     = {Sicherheit von Webanwendungen in der Praxis},
  publisher = {Springer Vieweg, Wiesbaden},
  year      = {2018},
  author    = {Matthias Rohr},
  edition   = {2},
  isbn      = {978-3-658-20144-9},
  abstract  = {Dieses Buch beleuchtet die wichtigsten Aspekte der Webanwendungssicherheit. Neben den Hintergründen und gängigen Angriffen werden zahlreiche Best Practices für Entwicklung, Betrieb und Testdurchführung vorgestellt. Der Autor erläutert zudem, wie sich die Sicherheit in entwickelten und zugekauften Webanwendungen auf organisatorischer Ebene verankern und damit nachhaltig verbessern lässt.

Die zweite Auflage des 2014 erstmals erschienen Buchs wurde vor dem Hintergrund neuer Techniken zur Abwehr von Angriffen, neuer Prüfverfahren und speziell auch neuer Erkenntnisse im Bereich agile Sicherheit vollständig überarbeitet und aktualisiert.},
  doi       = {10.1007/978-3-658-20145-6},
}

@InProceedings{Sun.2012,
  author    = {Sun, San-Tsai and Beznosov, Konstantin},
  title     = {The Devil is in the (Implementation) Details: An Empirical Analysis of OAuth SSO Systems},
  booktitle = {Proceedings of the 2012 ACM Conference on Computer and Communications Security},
  year      = {2012},
  series    = {CCS '12},
  pages     = {378--390},
  publisher = {ACM},
  abstract  = {Millions of web users today employ their Facebook accounts to sign into more than one million relying party (RP) websites. This web-based single sign-on (SSO) scheme is enabled by OAuth 2.0, a web resource authorization protocol that has been adopted by major service providers. The OAuth 2.0 protocol has proven secure by several formal methods, but whether it is indeed secure in practice remains an open question. We examine the implementations of three major OAuth identity providers (IdP) (Facebook, Microsoft, and Google) and 96 popular RP websites that support the use of Facebook accounts for login. Our results uncover several critical vulnerabilities that allow an attacker to gain unauthorized access to the victim user's profile and social graph, and impersonate the victim on the RP website. Closer examination reveals that these vulnerabilities are caused by a set of design decisions that trade security for implementation simplicity. To improve the security of OAuth 2.0 SSO systems in real-world settings, we suggest simple and practical improvements to the design and implementation of IdPs and RPs that can be adopted gradually by individual sites.},
  acmid     = {2382238},
  doi       = {10.1145/2382196.2382238},
  isbn      = {978-1-4503-1651-4},
  keywords  = {oauth 2.0, web single sign-on},
  location  = {Raleigh, North Carolina, USA},
  numpages  = {13},
  url       = {http://doi.acm.org/10.1145/2382196.2382238},
}

@InProceedings{Fett.2016,
  author    = {Fett, Daniel and K\"{u}sters, Ralf and Schmitz, Guido},
  title     = {A Comprehensive Formal Security Analysis of OAuth 2.0},
  booktitle = {Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security},
  year      = {2016},
  series    = {CCS '16},
  pages     = {1204--1215},
  publisher = {ACM},
  abstract  = {The OAuth 2.0 protocol is one of the most widely deployed authorization/single sign-on (SSO) protocols and also serves as the foundation for the new SSO standard OpenID Connect. Despite the popularity of OAuth, so far analysis efforts were mostly targeted at finding bugs in specific implementations and were based on formal models which abstract from many web features or did not provide a formal treatment at all. In this paper, we carry out the first extensive formal analysis of the OAuth 2.0 standard in an expressive web model. Our analysis aims at establishing strong authorization, authentication, and session integrity guarantees, for which we provide formal definitions. In our formal analysis, all four OAuth grant types (authorization code grant, implicit grant, resource owner password credentials grant, and the client credentials grant) are covered. They may even run simultaneously in the same and different relying parties and identity providers, where malicious relying parties, identity providers, and browsers are considered as well. Our modeling and analysis of the OAuth 2.0 standard assumes that security recommendations and best practices are followed in order to avoid obvious and known attacks.

When proving the security of OAuth in our model, we discovered four attacks which break the security of OAuth. The vulnerabilities can be exploited in practice and are present also in OpenID Connect.

We propose fixes for the identified vulnerabilities, and then, for the first time, actually prove the security of OAuth in an expressive web model. In particular, we show that the fixed version of OAuth (with security recommendations and best practices in place) provides the authorization, authentication, and session integrity properties we specify.},
  acmid     = {2978385},
  doi       = {10.1145/2976749.2978385},
  isbn      = {978-1-4503-4139-4},
  location  = {Vienna, Austria},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2976749.2978385},
}

@InProceedings{Yang.2016,
  author    = {Yang, Ronghai and Li, Guanchen and Lau, Wing Cheong and Zhang, Kehuan and Hu, Pili},
  title     = {Model-based Security Testing: An Empirical Study on OAuth 2.0 Implementations},
  booktitle = {Proceedings of the 11th ACM on Asia Conference on Computer and Communications Security},
  year      = {2016},
  series    = {ASIA CCS '16},
  pages     = {651--662},
  publisher = {ACM},
  abstract  = {Motivated by the prevalence of OAuth-related vulnerabilities in the wild, large-scale security testing of real-world OAuth 2.0 implementations have received increasing attention lately [31,37,42]. However, these existing works either rely on manual discovery of new vulnerabilities in OAuth 2.0 implementations or perform automated testing for specific, previously-known vulnerabilities across a large number of OAuth implementations. In this work, we propose an adaptive model-based testing framework to perform automated, large-scale security assessments for OAuth 2.0 implementations in practice. Key advantages of our approach include (1) its ability to identify existing vulnerabilities and discover new ones in an automated manner; (2) improved testing coverage as all possible execution paths within the scope of the model will be checked and (3) its ability to cater for the implementation differences of practical OAuth systems/ applications, which enables the analyst to offload the manual efforts for large-scale testing of OAuth implementations. We have designed and implemented OAuthTester to realize our proposed framework. Using OAuthTester, we examine the implementations of 4 major Identity Providers as well as 500 top-ranked US and Chinese websites which use the OAuth-based Single-Sign-On service provided by the formers. Our empirical findings demonstrate the efficacy of adaptive model-based testing on OAuth 2.0 deployments at scale. More importantly, OAuthTester not only manages to rediscover various existing vulnerabilities but also identify several previously unknown security flaws and new exploits for a large number of eal-world applications implementing OAuth 2.0.},
  acmid     = {2897874},
  comment   = {Motivated by the prevalence of OAuth-related vulnerabilities in the wild, large-scale security testing of real-world OAuth 2.0 implementations have received increasing attention lately [31,37,42]. However, these existing works either rely on manual discovery of new vulnerabilities in OAuth 2.0 implementations or perform automated testing for specific, previously-known vulnerabilities across a large number of OAuth implementations. In this work, we propose an adaptive model-based testing framework to perform automated, large-scale security assessments for OAuth 2.0 implementations in practice. Key advantages of our approach include (1) its ability to identify existing vulnerabilities and discover new ones in an automated manner; (2) improved testing coverage as all possible execution paths within the scope of the model will be checked and (3) its ability to cater for the implementation differences of practical OAuth systems/ applications, which enables the analyst to offload the manual efforts for large-scale testing of OAuth implementations. We have designed and implemented OAuthTester to realize our proposed framework. Using OAuthTester, we examine the implementations of 4 major Identity Providers as well as 500 top-ranked US and Chinese websites which use the OAuth-based Single-Sign-On service provided by the formers. Our empirical findings demonstrate the efficacy of adaptive model-based testing on OAuth 2.0 deployments at scale. More importantly, OAuthTester not only manages to rediscover various existing vulnerabilities but also identify several previously unknown security flaws and new exploits for a large number of eal-world applications implementing OAuth 2.0.},
  doi       = {10.1145/2897845.2897874},
  isbn      = {978-1-4503-4233-9},
  keywords  = {oauth 2.0, security testing, single sign-on},
  location  = {Xi'an, China},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2897845.2897874},
}

@InProceedings{Hu.2014,
  author    = {Hu, Pili and Yang, Ronghai and Li, Yue and Lau, Wing Cheong},
  title     = {Application Impersonation: Problems of OAuth and API Design in Online Social Networks},
  booktitle = {Proceedings of the Second ACM Conference on Online Social Networks},
  year      = {2014},
  series    = {COSN '14},
  pages     = {271--278},
  address   = {New York, NY, USA},
  publisher = {ACM},
  abstract  = {OAuth 2.0 protocol has enjoyed wide adoption by Online Social Network (OSN) providers since its inception. Although the security guideline of OAuth 2.0 is well discussed in RFC6749 and RFC6819, many real-world attacks due to the implementation specifics of OAuth 2.0 in various OSNs have been discovered. To our knowledge, previously discovered loopholes are all based on the misuse of OAuth and many of them rely on provider side or application side vulnerabilities/ faults beyond the scope of the OAuth protocol. It was generally believed that correct use of OAuth 2.0 is secure. In this paper, we show that OAuth 2.0 is intrinsically vulnerable to App impersonation attack due to its provision of multiple authorization flows and token types. We start by reviewing and analyzing the OAuth 2.0 protocol and some common API design problems found in many 1st tiered OSNs. We then propose the App impersonation attack and investigate its impact on 12 major OSN providers. We demonstrate that, App impersonation via OAuth 2.0, when combined with additional API design features/ deficiencies, make large-scale exploit and privacy-leak possible. For example, it becomes possible for an attacker to completely crawl a 200-million-user OSN within just one week and harvest data objects like the status list and friend list which are expected, by its users, to be private among only friends. We also propose fixes that can be readily deployed to tackle the OAuth2.0-based App impersonation problem.},
  acmid     = {2660463},
  doi       = {10.1145/2660460.2660463},
  isbn      = {978-1-4503-3198-2},
  keywords  = {api design in osn, app impersonation attack, oauth 2.0, single sign on, social network privacy},
  location  = {Dublin, Ireland},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2660460.2660463},
}

@InProceedings{Suzic.2018,
  author    = {Suzic, Bojan and Pr\"{u}nster, Bernd and Ziegler, Dominik},
  title     = {On the Structure and Authorization Management of RESTful Web Services},
  booktitle = {Proceedings of the 33rd Annual ACM Symposium on Applied Computing},
  year      = {2018},
  series    = {SAC '18},
  pages     = {1716--1724},
  address   = {New York, NY, USA},
  publisher = {ACM},
  abstract  = {A broad range of emerging business models relies on the continual exchange of data that flow among different services to generate additional value and derive knowledge in many domains. The magnitude of resource sharing that form the basis of these interactions raises new challenges concerning the effectivity of existing security and privacy management instruments in environments of such complexity.

In this work, we examine the practical application of authorization management mechanisms employed over RESTful Web APIs, which today serve as a major approach to expose service interfaces on the web. For this purpose, we have examined the integration of security mechanisms in n=523 public Web APIs. Our findings reveal alarming integration patterns that demonstrate a rudimentary data security and privacy protection in cross-service resource sharing. Our analysis traces the cause back to the (1) shallow models and security capabilities offered by service providers, and (2) design deficiencies of dominantly applied OAuth 2.0 web authorization framework that restrict capabilities and lower the interoperability of underlying management functions. Following the initial discussion, we summarize potential solutions and establish an outline of the future work.},
  acmid     = {3167315},
  doi       = {10.1145/3167132.3167315},
  isbn      = {978-1-4503-5191-1},
  keywords  = {service integration, service security, web services},
  location  = {Pau, France},
  numpages  = {9},
  url       = {http://doi.acm.org/10.1145/3167132.3167315},
}

@InProceedings{Shehab.2011,
  author    = {Shehab, Mohamed and Marouf, Said and Hudel, Christopher},
  title     = {ROAuth: Recommendation Based Open Authorization},
  booktitle = {Proceedings of the Seventh Symposium on Usable Privacy and Security},
  year      = {2011},
  series    = {SOUPS '11},
  pages     = {11:1--11:12},
  address   = {New York, NY, USA},
  publisher = {ACM},
  abstract  = {Many major online platforms such as Facebook, Google, and Twitter, provide an open Application Programming Interface which allows third party applications to access user resources. The Open Authorization protocol (OAuth) was introduced as a secure and efficient method for authorizing third party applications without releasing a user's access credentials. However, OAuth implementations don't provide the necessary fine-grained access control, nor any recommendations vis-a-vis which access control decisions are most appropriate. We propose an extension to the OAuth 2.0 authorization that enables the provisioning of fine-grained authorization recommendations to users when granting permissions to third party applications. We propose a mechanism that computes permission ratings based on a multi-criteria recommendation model which utilizes previous user decisions, and application requests to enhance the privacy of the overall site's user population. We implemented our proposed OAuth extension as a browser extension that allows users to easily configure their privacy settings at application installation time, provides recommendations on requested privacy attributes, and collects data regarding user decisions. Experiments on the collected data indicate that the proposed framework efficiently enhanced the user awareness and privacy related to third party application authorizations.},
  acmid     = {2078842},
  articleno = {11},
  doi       = {10.1145/2078827.2078842},
  isbn      = {978-1-4503-0911-0},
  keywords  = {OAuth, collaborationnetworks, privacy, recommendations, social networks},
  location  = {Pittsburgh, Pennsylvania},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2078827.2078842},
}

@InProceedings{Li.2013,
  author    = {Li, Li and Chou, Wu and Cai, Tao and Wang, Zhe and Qiu, Zhihong},
  title     = {Mirror Presence: Secure Web Identity Resolution and Call Control for WebRTC},
  booktitle = {Proceedings of International Conference on Information Integration and Web-based Applications \&\#38; Services},
  year      = {2013},
  series    = {IIWAS '13},
  pages     = {523:523--523:531},
  address   = {New York, NY, USA},
  publisher = {ACM},
  abstract  = {Identity resolution is a critical component in any real-time communication system, including WebRTC that relies on Web identities. The difficulty with Web identity resolution is that there is no uniform Web identity scheme and current Web identity schemes decouple Web identities and Web locations. To address this problem for WebRTC without introducing a central authority, we present a secure personal Web identity resolution framework, mirror presence, to dynamically map a user's Web identity to Web locations while the user can move between Web locations. The system is agnostic to Web identity schemes, and it consists of 3 layers of Web protocols and services: 1) bilateral authorization based on OAuth 2.0; 2) Web identity binding based on presence subscription and notification; 3) presence driven call routing and pickup protocols. Each layer of the system can be controlled by users based on security, privacy, and personal preferences. A prototype mirror presence system has been implemented, and experimental results indicated that the approach is feasible and the performance is satisfactory.},
  acmid     = {2539165},
  articleno = {523},
  doi       = {10.1145/2539150.2539165},
  isbn      = {978-1-4503-2113-6},
  keywords  = {OAuth, Web service, WebRTC, call pickup, call routing, mirror presence, presence subscription},
  location  = {Vienna, Austria},
  numpages  = {9},
  url       = {http://doi.acm.org/10.1145/2539150.2539165},
}

@InProceedings{Chung.2016,
  author    = {Chung, Sam and Moon, Sky and Endicott-Popovsky, Barbara},
  title     = {Architecture-Driven Penetration Testing Against an Identity Access Management (IAM) System},
  booktitle = {Proceedings of the 5th Annual Conference on Research in Information Technology},
  year      = {2016},
  series    = {RIIT '16},
  pages     = {13--18},
  address   = {New York, NY, USA},
  publisher = {ACM},
  abstract  = {The purpose of this research is to propose architecture-driven, penetration testing equipped with a software reverse and forward engineering process. Although the importance of architectural risk analysis has been emphasized in software security, no methodology is shown to answer how to discover the architecture and abuse cases of a given insecure legacy system and how to modernize it to a secure target system. For this purpose, we propose an architecture-driven penetration testing methodology: 4+1 architectural views of the given insecure legacy system, documented to discover program paths for vulnerabilities through a reverse engineering process. Then, vulnerabilities are identified by using the discovered architecture abuse cases and countermeasures are proposed on identified vulnerabilities. As a case study, a telecommunication company's Identity Access Management (IAM) system is used for discovering its software architecture, identifying the vulnerabilities of its architecture, and providing possible countermeasures. Our empirical results show that functional suggestions would be relatively easier to follow up and less time-consuming work to fix; however, architectural suggestions would be more complicated to follow up, even though it would guarantee better security and take full advantage of OAuth 2.0 supporting communities.},
  acmid     = {2978183},
  doi       = {10.1145/2978178.2978183},
  isbn      = {978-1-4503-4453-1},
  keywords  = {identity and access management environment, oauth 2.0, penetration testing, software architecture},
  location  = {Boston, Massachusetts, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2978178.2978183},
}

@InProceedings{Suzic.2016,
  author    = {Suzic, Bojan},
  title     = {Securing Integration of Cloud Services in Cross-domain Distributed Environments},
  booktitle = {Proceedings of the 31st Annual ACM Symposium on Applied Computing},
  year      = {2016},
  series    = {SAC '16},
  pages     = {398--405},
  address   = {New York, NY, USA},
  publisher = {ACM},
  abstract  = {Traditional cloud integration scenarios, as adopted by many organizations, assume business processes to be executed in a cross-domain context, connecting on-premise and cloud applications. The emerging model of cloud-based integration platforms extends these scenarios by transferring business process execution entirely to the cloud. Although this approach provides numerous benefits and opens a new range of opportunities, its adoption requires reconsideration of currently applied practices and their adjustment to a new perspective.

In this work, we analyze the existing approaches to cross-domain service composition based on cloud integration platforms. We particularly focus on the security of these approaches, considering currently dominant OAuth 2.0 web authorization protocol and emerging UMA protocol. For this purpose, we present a new tool that enables UMA support in Apache Camel integration framework. We then analyze and discuss the integration flows relying on both protocols. Finally, based on RMIAS framework, we provide a security assessment of both approaches, presenting an overview of issues and challenges for future work.},
  acmid     = {2851622},
  doi       = {10.1145/2851613.2851622},
  isbn      = {978-1-4503-3739-7},
  keywords  = {cloud computing, data security, integration platforms, service composition, web protocols},
  location  = {Pisa, Italy},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2851613.2851622},
}

@InProceedings{Sun.2015,
  author    = {Sun, San-Tsai and Cuadros, Andrea and Beznosov, Konstantin},
  title     = {Android Rooting: Methods, Detection, and Evasion},
  booktitle = {Proceedings of the 5th Annual ACM CCS Workshop on Security and Privacy in Smartphones and Mobile Devices},
  year      = {2015},
  series    = {SPSM '15},
  pages     = {3--14},
  address   = {New York, NY, USA},
  publisher = {ACM},
  abstract  = {Android rooting enables device owners to freely customize their own devices and run useful apps that require root privileges. While useful, rooting weakens the security of Android devices and opens the door for malware to obtain privileged access easily. Thus, several rooting prevention mechanisms have been introduced by vendors, and sensitive or high-value mobile apps perform rooting detection to mitigate potential security exposures on rooted devices. However, there is a lack of understanding whether existing rooting prevention and detection methods are effective. To fill this knowledge gap, we studied existing Android rooting methods and performed manual and dynamic analysis on 182 selected apps, in order to identify current rooting detection methods and evaluate their effectiveness. Our results suggest that these methods are ineffective. We conclude that reliable methods for detecting rooting must come from integrity-protected kernels or trusted execution environments, which are difficult to bypass.},
  acmid     = {2808126},
  doi       = {10.1145/2808117.2808126},
  isbn      = {978-1-4503-3819-6},
  keywords  = {oauth 2.0, web single sign-on},
  location  = {Denver, Colorado, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2808117.2808126},
}

@Book{Siriwardena.2014,
  title     = {NOT YET RECIEVED: Advanced API Security: Securing APIs with OAuth 2.0, OpenID Connect, JWS, and JWE},
  publisher = {Apress},
  year      = {2014},
  author    = {Siriwardena, Prabath},
  address   = {Berkely, CA, USA},
  edition   = {1st},
  isbn      = {978-1-4302-6818-5},
  doi       = {10.1007/978-1-4302-6817-8},
}

@TechReport{RFC6749,
  author       = {D. Hardt},
  title        = {The OAuth 2.0 Authorization Framework},
  institution  = {RFC Editor},
  year         = {2012},
  type         = {RFC},
  number       = {6749},
  month        = {October},
  howpublished = {Internet Requests for Comments},
  issn         = {2070-1721},
  url          = {https://tools.ietf.org/html/rfc6749},
}

@Article{chari.2011,
  author    = {Suresh Chari and Charanjit S. Jutla and Arnab Roy},
  title     = {Universally Composable Security Analysis of OAuth v2.0},
  journal   = {{IACR} Cryptology ePrint Archive},
  year      = {2011},
  volume    = {2011},
  pages     = {526},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/bib/journals/iacr/ChariJR11},
  timestamp = {Tue, 14 Aug 2018 17:08:20 +0200},
  url       = {http://eprint.iacr.org/2011/526},
}

@Comment{jabref-meta: databaseType:bibtex;}
